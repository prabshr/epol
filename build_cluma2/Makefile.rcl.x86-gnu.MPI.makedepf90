##########################################################
#
# Before runnig make, do the following:
#
# module purge
# module load sx
# module load apps
# module load mpi/2.9.0 gcc/9.1.0 netcdf4/4.7.3-VH-gnu hdf5/1.10.5-VH-gnu aec/1.0.3-VH-gnu eccodes/2.14.1-VH-gnu aocl/2.1-VH-gnu
# export NMPI_FC_H=gfortran
#
##########################################################

### directory of the source code:
srcdir=../src

### work directory for compiling:
objdir=./obj_x86-gnu

### which branch are we on? Remove any trailing "*/", e.g., "dev/" from the name by using "notdir":
branch := $(notdir $(shell git rev-parse --abbrev-ref HEAD))

### ifort:

# to find out netcdf-environment: nf-config --all

#CPS DPEMVO_LIBS  = -lflame -lblis
LAPACK_DIR   = /daten/daten01/z4/local/lapack-3.8.0
DPEMVO_LIBS  = -L$(LAPACK_DIR)/lib -lblas -llapack 

###DPEMVO_FLAGS =  -DTMATRIX2_QUADPREC
#CPS add for model grid point output
DPEMVO_FLAGS = -DAUXOUT_OFFLINE  

NETCDF_DIR   =  /usr/local/gcc94_suite
HDF5_DIR     =  /usr/local/gcc94_suite
ECCODES_DIR  =  /usr/local/gcc94_suite
#CPS
######-L$(ECCODES_DIR)/lib -leccodes_f90 -leccodes -ljasper -lpng -laec
LINKLIBS     =  -L$(ECCODES_DIR)/lib -leccodes_f90 -leccodes -ljasper -lpng -L$(NETCDF_DIR)/lib -lnetcdff -lnetcdf -L$(HDF5_DIR)/lib -lhdf5_fortran -lhdf5hl_fortran -lhdf5_hl -lhdf5 -lz $(DPEMVO_LIBS)
preprocflags =  -D__COSMO__ -DTWOMOM_SB_OLD -DNUDGING -DNETCDF -DHAS_IOMSG -DRADARFWO -DHDF5_RADAR_INPUT -DWITH_ZLIB -D__COSMO_REFL_OFFLINE__ -DGRIBAPI $(DPEMVO_FLAGS) 
incflags     =  -I$(ECCODES_DIR)/include -I$(NETCDF_DIR)/include -I$(HDF5_DIR)/include

#debugflags   =  -fbacktrace -g -fcheck=all -ffpe-trap=invalid,zero,overflow
debugflags   =  -fbacktrace -g -gdwarf-2 
optimflags   =  -O2 
#warnflags    =  -Wall -Wcharacter-truncation -Wconversion -Wunderflow -Wunused-parameter -Wno-surprising

### gfortran parallel MPI:
programmpar     =  cosmo_refl_offline_$(branch)_par_rcl-x86-gnu.exe
f90par          =  /usr/local/gcc94_suite/bin/mpifort $(optimflags) $(preprocflags) $(incflags) $(debugflags) $(warnflags) -cpp -std=f2008 -fall-intrinsics -fno-range-check -fmodule-private -fimplicit-none -fmax-identifier-length=63 -ffree-line-length-132 -fmax-errors=25
ld90par         =  /usr/local/gcc94_suite/bin/mpifort $(debugflags)


### binary for makedepf90:
mkdep           =  ../externals/makedepf90-2.8.8/bin/makedepf90
mkdepflags      =  $(preprocflags) -b $(objdir)


##########################################################
#
# Objects for compilation:
#
##########################################################


dataobjbase =                           \
          $(objdir)/kind_parameters.o   \
          $(objdir)/data_parameters.o   \
          $(objdir)/data_constants.o    \
          $(objdir)/data_runcontrol.o   \
          $(objdir)/data_parallel.o     \
          $(objdir)/data_modelconfig.o  \
          $(objdir)/data_fields.o       \
          $(objdir)/data_io.o           \
          $(objdir)/data_nudge_all.o    \
          $(objdir)/data_tracer.o       \
          $(objdir)/environment.o                \
          $(objdir)/parallel_utilities.o         \
          $(objdir)/wolken_konstanten.o          \
          $(objdir)/pp_utilities.o               \
          $(objdir)/utilities.o                  \
          $(objdir)/time_utilities.o             \
          $(objdir)/domain_decomposition_utils.o \
          $(objdir)/src_tracer.o              \
          $(objdir)/src_artifdata.o           \
          $(objdir)/mo_fdbk_cosmo.o           \
          $(objdir)/mo_fdbk.o                 \
          $(objdir)/mo_fdbk_tables.o          \
          $(objdir)/mo_kind.o                 \
          $(objdir)/mo_netcdf_param.o         \
          $(objdir)/mo_t_netcdf_file.o        \
          $(objdir)/mo_t_table.o              \
          $(objdir)/read_grib_from_index.o

dataobjradar = \
          $(objdir)/radar_data.o        \
          $(objdir)/radar_data_io.o        \
          $(objdir)/radar_gamma_functions_vec.o  \
          $(objdir)/radar_data_mie.o    \
          $(objdir)/radar_data_namelist.o    \
          $(objdir)/radar_parallel_utilities.o   \
          $(objdir)/radar_interface.o       \
          $(objdir)/radar_mie_utils.o   \
          $(objdir)/radar_mie_specint.o \
          $(objdir)/radar_mie_meltdegree.o  \
          $(objdir)/radar_mie_iface_cosmo_utils.o \
          $(objdir)/radar_mie_iface_cosmo_1mom.o \
          $(objdir)/radar_mie_iface_cosmo_2mom.o \
          $(objdir)/radar_mie_iface_cosmo_driver.o \
          $(objdir)/radar_mielib_vec.o  \
          $(objdir)/radar_sphbessel_vec.o  \
          $(objdir)/radar_utilities.o   \
          $(objdir)/radar_model2rays.o \
          $(objdir)/radar_output_methods.o \
          $(objdir)/radar_process_output.o \
          $(objdir)/radar_organize.o \
          $(objdir)/radar_namelist_read.o \
          $(objdir)/radar_obs_meta_list.o \
          $(objdir)/radar_obs_meta_read.o \
          $(objdir)/radar_obs_data_read.o \
          $(objdir)/radar_composites.o    \
          $(objdir)/radar_bubblegen.o \
          $(objdir)/radar_dualpol_t_matrix_mod.o \
          $(objdir)/radar_dualpol_t_matrix2_mod.o


####################################################
#
#     Targets for compilation
#
####################################################


.SUFFIXES:
.SUFFIXES: .f90 .o

exe :    parexe


####################################################
#         Parallel compile:

parexe : f90 = $(f90par)
parexe : ld90 = $(ld90par)
parexe : programm = $(programmpar)
parexe : mkobjdir / depend / check_is_not_mpifh / $(dataobjbase) $(dataobjradar) $(objdir)/cosmo_refl_offline.o
	echo Linking parallel program ...
	$(ld90) -o $(programm) $(dataobjbase) $(dataobjradar) $(objdir)/cosmo_refl_offline.o $(LINKLIBS) 

####################################################

$(objdir)/%.o:
	@ echo " compiling $< "
	( cd $(objdir) && $(f90) -c  ../$<  -o ../$@ )


####################################################

clean :
	rm -f $(objdir)//* $(programmpar) ObjDependencies

####################################################

check_is_mpifh:
	if [ ! -f $(srcdir)/mpif.h ]; then  \
          echo "ERROR: a local dummy mpif.h is not contained in src/ !";  \
	  if [ ! -f $(srcdir)/nompi_mpif.h ]; then  \
            echo "ERROR: nompi_mpif.h is also not contained in src/ !";  \
            exit 1;  \
          else	\
            echo "FIX: Copying $(srcdir)/mpif.h from $(srcdir)/nompi_mpif.h"; \
            cp $(srcdir)/nompi_mpif.h $(srcdir)/mpif.h; \
          fi \
        fi

check_is_not_mpifh:
	if [ -f $(srcdir)/mpif.h ]; then  \
          echo "ERROR: there is a local mpif.h in src/ !";  \
	  if [ -f $(srcdir)/nompi_mpif.h ]; then  \
            echo "FIX: Deleting $(srcdir)/mpif.h"; \
            rm $(srcdir)/mpif.h; \
	  else \
            echo "FIX: Moving $(srcdir)/mpif.h to $(srcdir)/nompi_mpif.h"; \
            mv $(srcdir)/mpif.h $(srcdir)/nompi_mpif.h; \
          fi \
        fi

depend ObjDependencies: 
	$(mkdep) $(mkdepflags) $(srcdir)/*.f90 > ObjDependencies

mkobjdir:
	mkdir -p $(objdir)

####################################################
#
# Include the ObjDependencies
#
####################################################


include ObjDependencies

